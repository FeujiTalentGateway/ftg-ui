[
    {
        "id": 1,
        "content": "Sum of Even Numbers",
        "description": "Write a function that takes a Map<String, Integer> as an argument and returns the sum of all even values in the map.",
        "difficultLevel": 1,
        "constraints": [
            {
                "id": 9,
                "constraint": "Values should be non-negative"
            }
        ],
        "testCases": [
            {
                "id": 2,
                "expectedResult": "6",
                "explanationExample": "Since the sum of even values 2 and 4 is 6, the result will be 6.",
                "isSample": true,
                "inputArguments": [
                    {
                        "id": 2,
                        "inputValue": "{\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4}",
                        "methodArgument": {
                            "id": 2,
                            "argumentName": "inputMap",
                            "argumentPosition": 1,
                            "isCollection": true,
                            "primitiveDataType": {
                                "id": 6,
                                "commonDataType": "String",
                                "pythonDataType": "str",
                                "javaDataType": "String",
                                "isCollection": false
                            },
                            "collectionDataType": {
                                "id": 9,
                                "commonDataType": "Map",
                                "pythonDataType": "map",
                                "javaDataType": "Map",
                                "isCollection": true
                            }
                        },
                        "methodArgumentName": "inputMap"
                    }
                ]
            }
        ],
        "methodDefinition": {
            "id": 2,
            "methodName": "sumOfEvenValues",
            "isCollectionType": false,
            "primitiveReturnType": {
                "id": 2,
                "commonDataType": "int",
                "pythonDataType": "int",
                "javaDataType": "int",
                "isCollection": false
            },
            "collectionReturnType": null,
            "methodArguments": [
                {
                    "id": 2,
                    "argumentName": "inputMap",
                    "argumentPosition": 1,
                    "isCollection": true,
                    "primitiveDataType": {
                        "id": 6,
                        "commonDataType": "String",
                        "pythonDataType": "str",
                        "javaDataType": "String",
                        "isCollection": false
                    },
                    "collectionDataType": {
                        "id": 9,
                        "commonDataType": "Map",
                        "pythonDataType": "map",
                        "javaDataType": "Map",
                        "isCollection": true
                    }
                }
            ]
        }
    },
    {
        "id": 2,
        "content": "Product of All Values",
        "description": "Write a function that takes a Map<String, Integer> as an argument and returns the product of all values in the map.",
        "difficultLevel": 2,
        "constraints": [
            {
                "id": 10,
                "constraint": "Values should be positive"
            }
        ],
        "testCases": [
            {
                "id": 3,
                "expectedResult": "24",
                "explanationExample": "Since the product of values 1, 2, 3, and 4 is 24, the result will be 24.",
                "isSample": true,
                "inputArguments": [
                    {
                        "id": 3,
                        "inputValue": "{\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4}",
                        "methodArgument": {
                            "id": 3,
                            "argumentName": "inputMap",
                            "argumentPosition": 1,
                            "isCollection": true,
                            "primitiveDataType": {
                                "id": 7,
                                "commonDataType": "String",
                                "pythonDataType": "str",
                                "javaDataType": "String",
                                "isCollection": false
                            },
                            "collectionDataType": {
                                "id": 10,
                                "commonDataType": "Map",
                                "pythonDataType": "map",
                                "javaDataType": "Map",
                                "isCollection": true
                            }
                        },
                        "methodArgumentName": "inputMap"
                    }
                ]
            }
        ],
        "methodDefinition": {
            "id": 3,
            "methodName": "productOfValues",
            "isCollectionType": false,
            "primitiveReturnType": {
                "id": 3,
                "commonDataType": "int",
                "pythonDataType": "int",
                "javaDataType": "int",
                "isCollection": false
            },
            "collectionReturnType": null,
            "methodArguments": [
                {
                    "id": 3,
                    "argumentName": "inputMap",
                    "argumentPosition": 1,
                    "isCollection": true,
                    "primitiveDataType": {
                        "id": 7,
                        "commonDataType": "String",
                        "pythonDataType": "str",
                        "javaDataType": "String",
                        "isCollection": false
                    },
                    "collectionDataType": {
                        "id": 10,
                        "commonDataType": "Map",
                        "pythonDataType": "map",
                        "javaDataType": "Map",
                        "isCollection": true
                    }
                }
            ]
        }
    },
    {
        "id": 3,
        "content": "Count Negative Values",
        "description": "Write a function that takes a Map<String, Integer> as an argument and returns the count of negative values in the map.",
        "difficultLevel": 1,
        "constraints": [
            {
                "id": 11,
                "constraint": "Values can be positive, negative, or zero"
            }
        ],
        "testCases": [
            {
                "id": 4,
                "expectedResult": "2",
                "explanationExample": "Since there are two negative values -1 and -3, the result will be 2.",
                "isSample": true,
                "inputArguments": [
                    {
                        "id": 4,
                        "inputValue": "{\"a\": -1, \"b\": 2, \"c\": -3, \"d\": 4}",
                        "methodArgument": {
                            "id": 4,
                            "argumentName": "inputMap",
                            "argumentPosition": 1,
                            "isCollection": true,
                            "primitiveDataType": {
                                "id": 8,
                                "commonDataType": "String",
                                "pythonDataType": "str",
                                "javaDataType": "String",
                                "isCollection": false
                            },
                            "collectionDataType": {
                                "id": 11,
                                "commonDataType": "Map",
                                "pythonDataType": "map",
                                "javaDataType": "Map",
                                "isCollection": true
                            }
                        },
                        "methodArgumentName": "inputMap"
                    }
                ]
            }
        ],
        "methodDefinition": {
            "id": 4,
            "methodName": "countNegativeValues",
            "isCollectionType": false,
            "primitiveReturnType": {
                "id": 4,
                "commonDataType": "int",
                "pythonDataType": "int",
                "javaDataType": "int",
                "isCollection": false
            },
            "collectionReturnType": null,
            "methodArguments": [
                {
                    "id": 4,
                    "argumentName": "inputMap",
                    "argumentPosition": 1,
                    "isCollection": true,
                    "primitiveDataType": {
                        "id": 8,
                        "commonDataType": "String",
                        "pythonDataType": "str",
                        "javaDataType": "String",
                        "isCollection": false
                    },
                    "collectionDataType": {
                        "id": 11,
                        "commonDataType": "Map",
                        "pythonDataType": "map",
                        "javaDataType": "Map",
                        "isCollection": true
                    }
                }
            ]
        }
    },
    {
        "id": 4,
        "content": "Find Maximum Value",
        "description": "Write a function that takes a Map<String, Integer> as an argument and returns the maximum value in the map.",
        "difficultLevel": 1,
        "constraints": [
            {
                "id": 12,
                "constraint": "Values should not be empty"
            }
        ],
        "testCases": [
            {
                "id": 5,
                "expectedResult": "4",
                "explanationExample": "Since the maximum value in the map is 4, the result will be 4.",
                "isSample": true,
                "inputArguments": [
                    {
                        "id": 5,
                        "inputValue": "{\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4}",
                        "methodArgument": {
                            "id": 5,
                            "argumentName": "inputMap",
                            "argumentPosition": 1,
                            "isCollection": true,
                            "primitiveDataType": {
                                "id": 9,
                                "commonDataType": "String",
                                "pythonDataType": "str",
                                "javaDataType": "String",
                                "isCollection": false
                            },
                            "collectionDataType": {
                                "id": 12,
                                "commonDataType": "Map",
                                "pythonDataType": "map",
                                "javaDataType": "Map",
                                "isCollection": true
                            }
                        },
                        "methodArgumentName": "inputMap"
                    }
                ]
            }
        ],
        "methodDefinition": {
            "id": 5,
            "methodName": "findMaxValue",
            "isCollectionType": false,
            "primitiveReturnType": {
                "id": 5,
                "commonDataType": "int",
                "pythonDataType": "int",
                "javaDataType": "int",
                "isCollection": false
            },
            "collectionReturnType": null,
            "methodArguments": [
                {
                    "id": 5,
                    "argumentName": "inputMap",
                    "argumentPosition": 1,
                    "isCollection": true,
                    "primitiveDataType": {
                        "id": 9,
                        "commonDataType": "String",
                        "pythonDataType": "str",
                        "javaDataType": "String",
                        "isCollection": false
                    },
                    "collectionDataType": {
                        "id": 12,
                        "commonDataType": "Map",
                        "pythonDataType": "map",
                        "javaDataType": "Map",
                        "isCollection": true
                    }
                }
            ]
        }
    },
    {
        "id": 5,
        "content": "Average of Values",
        "description": "Write a function that takes a Map<String, Integer> as an argument and returns the average of all values in the map.",
        "difficultLevel": 1,
        "constraints": [
            {
                "id": 13,
                "constraint": "Values should not be empty"
            }
        ],
        "testCases": [
            {
                "id": 6,
                "expectedResult": "2.5",
                "explanationExample": "Since the average of values 1, 2, 3, and 4 is 2.5, the result will be 2.5.",
                "isSample": true,
                "inputArguments": [
                    {
                        "id": 6,
                        "inputValue": "{\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4}",
                        "methodArgument": {
                            "id": 6,
                            "argumentName": "inputMap",
                            "argumentPosition": 1,
                            "isCollection": true,
                            "primitiveDataType": {
                                "id": 10,
                                "commonDataType": "String",
                                "pythonDataType": "str",
                                "javaDataType": "String",
                                "isCollection": false
                            },
                            "collectionDataType": {
                                "id": 13,
                                "commonDataType": "Map",
                                "pythonDataType": "map",
                                "javaDataType": "Map",
                                "isCollection": true
                            }
                        },
                        "methodArgumentName": "inputMap"
                    }
                ]
            }
        ],
        "methodDefinition": {
            "id": 6,
            "methodName": "averageOfValues",
            "isCollectionType": false,
            "primitiveReturnType": {
                "id": 6,
                "commonDataType": "double",
                "pythonDataType": "float",
                "javaDataType": "double",
                "isCollection": false
            },
            "collectionReturnType": null,
            "methodArguments": [
                {
                    "id": 6,
                    "argumentName": "inputMap",
                    "argumentPosition": 1,
                    "isCollection": true,
                    "primitiveDataType": {
                        "id": 10,
                        "commonDataType": "String",
                        "pythonDataType": "str",
                        "javaDataType": "String",
                        "isCollection": false
                    },
                    "collectionDataType": {
                        "id": 13,
                        "commonDataType": "Map",
                        "pythonDataType": "map",
                        "javaDataType": "Map",
                        "isCollection": true
                    }
                }
            ]
        }
    }
]
